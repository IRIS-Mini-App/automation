name: CI

on:
  # Trigger on push to master
  push:
    branches: [ master ]
  # Trigger on PRs to any branch
  pull_request:
    branches: [ '**' ]

jobs:
  lint:
    runs-on: ubuntu-latest
    # Add permissions needed for PR comments
    permissions:
      contents: read
      pull-requests: write
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint
        
    - name: Run pylint for PR
      if: github.event_name == 'pull_request'
      id: pylint_pr
      run: |
        # For PR, require 10/10 score
        pylint utils pages tests config conftest.py test_settings.py --output-format=parseable --fail-under=10.0 > pylint_report.txt
        
    - name: Run pylint for push
      if: github.event_name == 'push'
      id: pylint_push
      run: |
        # For push to master, just collect results
        pylint utils pages tests config conftest.py test_settings.py --output-format=parseable > pylint_report.txt || true
        
    - name: Comment Results
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          let pylintOutput;
          try {
            pylintOutput = fs.readFileSync('pylint_report.txt', 'utf8');
          } catch (error) {
            pylintOutput = 'Failed to read pylint results';
          }
          
          const isPR = context.eventName === 'pull_request';
          const header = isPR ? '## Pylint Results (Required Score: 10/10)' : '## Pylint Results';
          const body = `${header}
          \`\`\`
          ${pylintOutput}
          \`\`\`
          ${isPR ? '\n\n**Note:** PR checks will fail if score is below 10/10' : ''}
          `;
          
          if (isPR) {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
          } else {
            // For push to master, create a commit comment
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: body
            });
          }
