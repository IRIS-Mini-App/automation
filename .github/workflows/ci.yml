name: CI

on:
  # Trigger on push to master
  push:
    branches: [ master ]
  # Trigger on PRs to any branch
  pull_request:
    branches: [ '**' ]

jobs:
  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    # Add permissions needed for PR comments
    permissions:
      contents: read
      pull-requests: write
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint
        
    - name: Run Pylint Check
      id: lint_check
      run: |
        # Create a list of Python files
        find . -type f -name "*.py" > python_files.txt
        
        # Run pylint and capture results
        pylint $(cat python_files.txt) --output-format=text --score=yes > pylint_report.txt || LINT_EXIT_CODE=$?
        
        # Get score if available
        if [ -f pylint_report.txt ]; then
          SCORE=$(tail -n 2 pylint_report.txt | grep "rated at" | grep -oP "[\d.]+(?=/10)" || echo "0")
          echo "PYLINT_SCORE=$SCORE" >> $GITHUB_ENV
        fi
        
        # Save detailed report for comment
        pylint $(cat python_files.txt) --output-format=colorized > pylint_details.txt || true
        
    - name: Post Results
      if: always()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const score = process.env.PYLINT_SCORE;
          const details = fs.readFileSync('pylint_details.txt', 'utf8');
          
          const report = `### Pylint Results
          
          Current score: ${score}/10
          
          <details><summary>Detailed Report</summary>
          
          \`\`\`
          ${details}
          \`\`\`
          </details>`;
          
          if (context.eventName === 'pull_request') {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: report
            });
          }
